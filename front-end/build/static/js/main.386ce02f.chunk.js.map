{"version":3,"sources":["http-common.js","services/submission.service.js","components/add-submission.component.js","components/submission.component.js","common/with-router.js","components/submissions-list.component.js","components/calculator.component.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","Content-type","submission_service","SubmissionDataService","Object","classCallCheck","this","createClass","key","value","http","get","id","concat","data","post","put","delete","activity","AddSubmission","_Component","props","_this","possibleConstructorReturn","getPrototypeOf","call","onChangeActivity","bind","assertThisInitialized","onChangeCalories","saveSubmission","newSubmission","state","calories","published","submitted","inherits","e","setState","target","_this2","then","response","console","log","catch","react_default","a","createElement","className","onClick","htmlFor","type","required","onChange","name","Component","withRouter","location","useLocation","navigate","useNavigate","params","useParams","assign","router","Submission","getSubmission","updatePublished","updateSubmission","deleteSubmission","currentSubmission","message","prevState","objectSpread","status","_this3","update","_this4","_this5","_this6","SubmissionsList","onChangeSearchActivity","retrieveSubmissions","refreshList","setActiveSubmission","removeAllSubmissions","searchActivity","submissions","currentIndex","getAll","submission","index","deleteAll","findByActivity","_this$state","placeholder","map","dist","to","Calculator","budgetFeedback","document","querySelector","expenseFeedback","budgetForm","getElementById","budgetInput","budgetAmount","expenseAmount","balance","balanceAmount","expenseForm","expenseInput","amountInput","expenseList","itemList","itemID","classList","add","innerHTML","self","setTimeout","remove","textContent","showBalance","expense","totalExpense","total","parseInt","expenseValue","amountValue","amount","title","push","addExpense","div","appendChild","length","reduce","acc","curr","element","dataset","parent","parentElement","removeChild","filter","item","tempList","class","addEventListener","calculator","event","preventDefault","submitBudgetForm","submitExpenseForm","contains","editExpense","deleteExpense","eventListeners","App","apply","arguments","react_router_dist","path","submissions_list_component_SubmissionsList","add_submission_component_AddSubmission","submission_component","calculator_component_Calculator","Boolean","window","hostname","match","container","createRoot","render","src_App_0","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.386ce02f.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});\n","import http from \"../http-common\";\n\nclass SubmissionDataService {\n  getAll() {\n    return http.get(\"/submissions\");\n  }\n\n  get(id) {\n    return http.get(`/submissions/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/submissions\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/submissions/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/submissions/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/submissions`);\n  }\n\n  findByActivity(activity) {\n    return http.get(`/submissions?activity=${activity}`);\n  }\n}\n\nexport default new SubmissionDataService();\n","import React, { Component } from \"react\";\nimport SubmissionDataService from \"../services/submission.service\";\n\nexport default class AddSubmission extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeActivity = this.onChangeActivity.bind(this);\n    this.onChangeCalories = this.onChangeCalories.bind(this);\n    this.saveSubmission = this.saveSubmission.bind(this);\n    this.newSubmission = this.newSubmission.bind(this);\n\n    this.state = {\n      id: null,\n      activity: \"\",\n      calories: \"\", \n      published: false,\n\n      submitted: false\n    };\n  }\n\n  onChangeActivity(e) {\n    this.setState({\n      activity: e.target.value\n    });\n  }\n\n  onChangeCalories(e) {\n    this.setState({\n      calories: e.target.value\n    });\n  }\n\n  saveSubmission() {\n    var data = {\n      activity: this.state.activity,\n      calories: this.state.calories\n    };\n\n    SubmissionDataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          activity: response.data.activity,\n          calories: response.data.calories,\n          published: response.data.published,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newSubmission() {\n    this.setState({\n      id: null,\n      activity: \"\",\n      calories: \"\",\n      published: false,\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newSubmission}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"activity\">Activity</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"activity\"\n                required\n                value={this.state.activity}\n                onChange={this.onChangeActivity}\n                name=\"activity\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"calories\">Calories</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"calories\"\n                required\n                value={this.state.calories}\n                onChange={this.onChangeCalories}\n                name=\"calories\"\n              />\n            </div>\n\n            <button onClick={this.saveSubmission} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport SubmissionDataService from \"../services/submission.service\";\nimport { withRouter } from '../common/with-router';\n\nclass Submission extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeActivity = this.onChangeActivity.bind(this);\n    this.onChangeCalories = this.onChangeCalories.bind(this);\n    this.getSubmission = this.getSubmission.bind(this);\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updateSubmission = this.updateSubmission.bind(this);\n    this.deleteSubmission = this.deleteSubmission.bind(this);\n\n    this.state = {\n      currentSubmission: {\n        id: null,\n        activity: \"\",\n        calories: \"\",\n        published: false\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getSubmission(this.props.router.params.id);\n  }\n\n  onChangeActivity(e) {\n    const activity = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentSubmission: {\n          ...prevState.currentSubmission,\n          activity: activity\n        }\n      };\n    });\n  }\n\n  onChangeCalories(e) {\n    const calories = e.target.value;\n    \n    this.setState(prevState => ({\n      currentSubmission: {\n        ...prevState.currentSubmission,\n        calories: calories\n      }\n    }));\n  }\n\n  getSubmission(id) {\n    SubmissionDataService.get(id)\n      .then(response => {\n        this.setState({\n          currentSubmission: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updatePublished(status) {\n    var data = {\n      id: this.state.currentSubmission.id,\n      activity: this.state.currentSubmission.activity,\n      calories: this.state.currentSubmission.calories,\n      published: status\n    };\n\n    SubmissionDataService.update(this.state.currentSubmission.id, data)\n      .then(response => {\n        this.setState(prevState => ({\n          currentSubmission: {\n            ...prevState.currentSubmission,\n            published: status\n          }\n        }));\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updateSubmission() {\n    SubmissionDataService.update(\n      this.state.currentSubmission.id,\n      this.state.currentSubmission\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          message: \"The submission was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  deleteSubmission() {    \n    SubmissionDataService.delete(this.state.currentSubmission.id)\n      .then(response => {\n        console.log(response.data);\n        this.props.router.navigate('/submissions');\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentSubmission } = this.state;\n\n    return (\n      <div>\n        {currentSubmission ? (\n          <div className=\"edit-form\">\n            <h4>Submissions</h4>\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"activty\">Activity</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"activity\"\n                  value={currentSubmission.activity}\n                  onChange={this.onChangeActivity}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"calories\">Calories</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"calories\"\n                  value={currentSubmission.calories}\n                  onChange={this.onChangeCalories}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>\n                  <strong>Status:</strong>\n                </label>\n                {currentSubmission.published ? \"Published\" : \"Pending\"}\n              </div>\n            </form>\n\n            {currentSubmission.published ? (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updatePublished(false)}\n              >\n                UnPublish\n              </button>\n            ) : (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updatePublished(true)}\n              >\n                Publish\n              </button>\n            )}\n\n            <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deleteSubmission}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updateSubmission}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Submission...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Submission);\n\n","import { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport React from 'react';\n\nexport const withRouter = (Component) => {\n  function ComponentWithRouterProp(props) {\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return <Component {...props} router={{ location, navigate, params }} />;\n  }\n  return ComponentWithRouterProp;\n};","import React, { Component } from \"react\";\nimport SubmissionDataService from \"../services/submission.service\";\nimport { Link } from \"react-router-dom\";\n\nexport default class SubmissionsList extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchActivity = this.onChangeSearchActivity.bind(this);\n    this.retrieveSubmissions = this.retrieveSubmissions.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveSubmission = this.setActiveSubmission.bind(this);\n    this.removeAllSubmissions = this.removeAllSubmissions.bind(this);\n    this.searchActivity = this.searchActivity.bind(this);\n\n    this.state = {\n      submissions: [],\n      currentSubmission: null,\n      currentIndex: -1,\n      searchActivity: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveSubmissions();\n  }\n\n  onChangeSearchActivity(e) {\n    const searchActivity = e.target.value;\n\n    this.setState({\n      searchActivity: searchActivity\n    });\n  }\n\n  retrieveSubmissions() {\n    SubmissionDataService.getAll()\n      .then(response => {\n        this.setState({\n          submissions: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  refreshList() {\n    this.retrieveSubmissions();\n    this.setState({\n      currentSubmission: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveSubmission(submission, index) {\n    this.setState({\n      currentSubmission: submission,\n      currentIndex: index\n    });\n  }\n\n  removeAllSubmissions() {\n    SubmissionDataService.deleteAll()\n      .then(response => {\n        console.log(response.data);\n        this.refreshList();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  searchActivity() {\n    SubmissionDataService.findByActivity(this.state.searchActivity)\n      .then(response => {\n        this.setState({\n          submissions: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { searchActivity, submissions, currentSubmission, currentIndex } = this.state;\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-8\">\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search by Activity\"\n              value={searchActivity}\n              onChange={this.onChangeSearchActivity}\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-outline-secondary\"\n                type=\"button\"\n                onClick={this.searchActivity}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6\">\n          <h4>Calorie Log</h4>\n\n          <ul className=\"list-group\">\n            {submissions &&\n              submissions.map((submission, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => this.setActiveSubmission(submission, index)}\n                  key={index}\n                >\n                  {submission.activity}\n                </li>\n              ))}\n          </ul>\n\n          <button\n            className=\"m-3 btn btn-sm btn-danger\"\n            onClick={this.removeAllSubmissions}\n          >\n            Remove All\n          </button>\n        </div>\n        <div className=\"col-md-6\">\n          {currentSubmission ? (\n            <div>\n              <h4>Submission</h4>\n              <div>\n                <label>\n                  <strong>Activity:</strong>\n                </label>{\" \"}\n                {currentSubmission.activity}\n              </div>\n              <div>\n                <label>\n                  <strong>Calories:</strong>\n                </label>{\" \"}\n                {currentSubmission.calories}\n              </div>\n              <div>\n                <label>\n                  <strong>Status:</strong>\n                </label>{\" \"}\n                {currentSubmission.published ? \"Published\" : \"Pending\"}\n              </div>\n\n              <Link\n                to={\"/submissions/\" + currentSubmission.id}\n                className=\"badge badge-warning\"\n              >\n                Edit\n              </Link>\n            </div>\n          ) : (\n            <div>\n              <br />\n              <p>Please click on a calorie submission...</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport \"../css/calculator.css\";\n//import { withRouter } from '../common/with-router';\n\nexport default class Calculator extends Component {\n   constructor(props) { \n      super(props);\n     this.budgetFeedback = document.querySelector(\".budget-feedback\");\n     this.expenseFeedback = document.querySelector(\".expense-feedback\");\n     this.budgetForm = document.getElementById(\"budget-form\");\n     this.budgetInput = document.getElementById(\"budget-input\");\n     this.budgetAmount = document.getElementById(\"budget-amount\");\n     this.expenseAmount = document.getElementById(\"expense-amount\");\n     this.balance = document.getElementById(\"balance\");\n     this.balanceAmount = document.getElementById(\"balance-amount\");\n     this.expenseForm = document.getElementById(\"expense-form\");\n     this.expenseInput = document.getElementById(\"expense-input\");\n     this.amountInput = document.getElementById(\"amount-input\");\n     this.expenseList = document.getElementById(\"expense-list\");\n     this.itemList = [];\n     this.itemID = 0;\n   }\n   //submit budget method\n   submitBudgetForm(){\n     const value = this.budgetInput.value;\n     if(value === \"\" || value < 0) {\n         this.budgetFeedback.classList.add('showItem');\n         this.budgetFeedback.innerHTML = `<p>value cannot be empty or negative</p>`;\n         const self = this;\n \n         setTimeout(function() {\n           self.budgetFeedback.classList.remove(\"showItem\");\n         }, 4000);   \n     } else {\n       this.budgetAmount.textContent = value;\n       this.budgetInput.value = \"\";\n       this.showBalance();\n     } \n   }\n // show balance\n showBalance(){\n   const expense = this.totalExpense();\n   const total = parseInt(this.budgetAmount.textContent) - expense;\n   this.balanceAmount.textContent = total;\n   if(total < 0){\n     this.balance.classList.remove('showGreen', 'showBlack');\n     this.balance.classList.add('showRed');\n   }else if(total > 0){\n     this.balance.classList.remove('showRed', 'showBlack');\n     this.balance.classList.add('showGreen');\n   }else if(total === 0){\n     this.balance.classList.remove('showRed', 'showGreen');\n     this.balance.classList.add('showBlack');\n   }\n }  \n //submit expense form\n submitExpenseForm(){\n   const expenseValue = this.expenseInput.value;\n   const amountValue = this.amountInput.value;\n   if(expenseValue === '' || amountValue === ''|| amountValue < 0){\n     this.expenseFeedback.classList.add('showItem');\n     this.expenseFeedback.innerHTML = `<p>values cannot be empty or negative<p>`\n     const self = this;\n     setTimeout(function(){\n       self.expenseFeedback.classList.remove('showItem');\n     }, 4000);\n   } else { \n     let amount = parseInt(amountValue);\n     this.expenseInput.value = \"\";\n     this.amountInput.value = \"\";\n \n     let expense = {\n       id:this.itemID,\n       title:expenseValue,\n       amount:amount,\n     }\n     this.itemID++;\n     this.itemList.push(expense);\n     this.addExpense(expense); \n     this.showBalance();\n   }\n }\n //add expense\n addExpense(expense){\n   const div = document.createElement('div');\n   div.classList.add('expense');\n   div.innerHTML = ` \n   <div class=\"ex pense-item d-flex justify-content-between align-items-baseline\">\n \n   <h6 class=\"expense-title mb-0 text-uppercase list-item\">- ${expense.title}</h6>\n   <h5 class=\"expense-amount mb-0 list-item\">${expense.amount}</h5>\n \n   <div class=\"expense-icons list-item\">\n \n    <a href=\"#\" class=\"edit-icon mx-2\" data-id=\"${expense.id}\">\n     <i class=\"fas fa-edit\"></i>\n    </a>\n    <a href=\"#\" class=\"delete-icon\" data-id=\"${expense.id}\">\n     <i class=\"fas fa-trash\"></i>\n    </a>\n   </div>\n  </div>\n  `;\n  this.expenseList.appendChild(div);\n }\n \n //total expense\n totalExpense(){ \n  let total = 0;\n  if(this.itemList.length>0){\n   total = this.itemList.reduce(function(acc, curr){\n     acc +=curr.amount;\n     return acc;\n   }, 0);\n  }\n  this.expenseAmount.textContent = total;  \n return total;\n }\n \n // edit expense\n editExpense(element){\n   let id = parseInt(element.dataset.id);\n   let parent = element.parentElement.parentElement.parentElement;\n   //remove from dom\n   this.expenseList.removeChild(parent);\n   // remove from the list\n   let expense = this.itemList.filter(function(item){\n     return item.id === id;\n   }); \n   //show value\n   this.expenseInput.value = expense[0].title;\n   this.amountInput.value = expense[0].amount;\n   // remove from list\n   let tempList = this.itemList.filter(function(item){\n     return item.id !==id;\n   });\n   this.itemList = tempList;\n   this.showBalance();\n }\n //delete expense\n deleteExpense(element){\n   let id = parseInt(element.dataset.id);\n   let parent = element.parentElement.parentElement.parentElement;\n   //remove from dom\n   this.expenseList.removeChild(parent);\n   // remove from list\n   let tempList = this.itemList.filter(function(item){\n     return item.id !==id;\n   });\n   this.itemList = tempList;\n   this.showBalance();\n }\n\n render() {\n   return (\n   <div class=\"container-fluid\">\n      <div class=\"row\">\n      <div class=\"col-11 mx-auto pt-3\">\n      <h3 class=\"text-uppercase mb-4\">FitMate</h3>\n      <div class=\"row\">\n         <div class=\"col-md-5 my-3\">\n         <div class=\"budget-feedback alert alert-danger text-capitalize\">budget feedback</div>\n         <form id=\"budget-form\" class=\" budget-form\">\n         <h5 class=\"text-capitalize\">please enter your calorie budget</h5>\n         <div class=\"form-group\">\n            <input type=\"number\" class=\"form-control budget-input\" id=\"budget-input\"/>\n         </div>\n         <button type=\"submit\" class=\"btn text-capitalize budget-submit\" id=\"budget-submit\">calculate</button>\n         </form>\n         </div>\n         <div class=\"col-md-7\">\n         <div class=\"row my-3\">\n         <h6 class=\"text-uppercase info-title\">budget</h6>\n        <span class=\"budget-icon\"><i class=\"fas fa-money-bill-alt\"></i></span>\n        <h4 class=\"text-uppercase mt-2 budget\" id=\"budget\"><span></span><span id=\"budget-amount\">0</span></h4>\n       </div>\n       <div class=\"col-4 text-center\">\n        <h6 class=\"text-uppercase info-title\">expenses</h6>\n        <span class=\"expense-icon\"><i class=\"far fa-credit-card\"></i></span>\n        <h4 class=\"text-uppercase mt-2 expense\" id=\"expense\"><span></span><span id=\"expense-amount\">0</span></h4>\n       </div>\n       <div class=\"col-4 text-center\">\n        <h6 class=\"text-uppercase info-title\">balance</h6>\n        <span class=\"balance-icon\"><i class=\"fas fa-dollar-sign\"></i></span>\n        <h4 class=\"text-uppercase mt-2 balance\" id=\"balance\"> <span></span><span id=\"balance-amount\">0</span></h4>\n       </div>\n      </div>\n     </div>\n    </div>\n   \n      <div class=\"row\">\n         <div class=\"col-md-5 my-3\">\n         <div class=\"expense-feedback alert alert-danger text-capitalize\">expense feedback</div>\n         <form id=\"expense-form\" class=\" expense-form\">\n         <h5 class=\"text-capitalize\">please enter your activity</h5>\n         <div class=\"form-group\">\n            <input type=\"text\" class=\"form-control expense-input\" id=\"expense-input\"/>\n         </div>\n         <h5 class=\"text-capitalize\">please enter calories burned</h5>\n         <div class=\"form-group\">\n            <input type=\"number\" class=\"form-control expense-input\" id=\"amount-input\"/>\n         </div>\n         <button type=\"submit\" class=\"btn text-capitalize expense-submit\" id=\"expense-submit\">enter calories</button>\n         </form>\n         </div>\n         <div class=\"col-md-7 my-3\">\n         <div class=\"expense-list\" id=\"expense-list\">\n   \n         <div class=\"expense-list__info d-flex justify-content-between text-capitalize\">\n            <h5 class=\"list-item\">Activity</h5>\n            <h5 class=\"list-item\">Calories</h5>\n            <h5 class=\"list-item\">Test</h5>\n         </div>\n   \n         </div>\n         </div>\n      </div>\n      </div>\n      </div>\n );\n }\n }\n \n function eventListeners(){\n const budgetForm = document.getElementById('budget-form');\n const expenseForm = document.getElementById('expense-form');\n const expenseList  = document.getElementById('expense-list');\n \n //new instance of Calculator Class\n const calculator = new Calculator();\n \n // budget form submit\n budgetForm.addEventListener('submit', function(event){\n   event.preventDefault(); \n   calculator.submitBudgetForm();\n });\n // expense form submit\n expenseForm.addEventListener('submit', function(event){\n   event.preventDefault();\n   calculator.submitExpenseForm(); \n });\n // expense click\n expenseList.addEventListener('click', function(event) {\n   if(event.target.parentElement.classList.contains('edit-icon')){\n     calculator.editExpense(event.target.parentElement)\n   }\n   else if(event.target.parentElement.classList.contains('delete-icon')){\n     calculator.deleteExpense(event.target.parentElement)\n   }\n });\n }\n \n document.addEventListener('DOMContentLoaded', function(){\n   eventListeners();\n });","import React, { Component } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddSubmission from \"./components/add-submission.component\";\nimport Submission from \"./components/submission.component\";\nimport SubmissionsList from \"./components/submissions-list.component\";\nimport Calculator from \"./components/calculator.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/submissions\"} className=\"navbar-brand\">\n            FitMate\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/submissions\"} className=\"nav-link\">\n                Profile\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Calorie Entry\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/calculator\"} className=\"nav-link\">\n                Calculator\n              </Link>\n            </li>\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Routes>\n            <Route path=\"/\" element={<SubmissionsList/>} />\n            <Route path=\"/submissions\" element={<SubmissionsList/>} />\n            <Route path=\"/add\" element={<AddSubmission/>} />\n            <Route path=\"/submissions/:id\" element={<Submission/>} />\n            <Route path=\"/calculator\" element={<Calculator/>} />\n          </Routes>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\n\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nserviceWorker.unregister();\n\n\n\n"],"sourceRoot":""}